{"version":3,"sources":["../../src/controller/note.js"],"names":["config","db","api","get","req","res","Note","find","err","notes","send","json","findById","params","id","note","cntxId","post","console","log","body","data","newNote","name","content","ts","save","message","delete","remove","_id","put","isSecret"],"mappings":"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","file":"note.js","sourcesContent":["import { Router } from 'express';\nimport Note from '../model/note';\n\nexport default({ config, db }) => {\n  let api = Router();\n\n  // '/v1/notes' - GET all notes\n  api.get('/', (req, res) => {\n    Note.find({}, (err, notes) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(notes);\n    });\n  });\n\n  // '/v1/notes/:id' - GET a specific note\n  api.get('/:id', (req, res) => {\n    Note.findById(req.params.id, (err, note) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(note);\n    });\n  });\n\n  // '/v1/notes/cntx/:id' - GET a specific note\n  api.get('/cntx/:id', (req, res) => {\n    Note.find({cntxId: req.params.id}, (err, note) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(note);\n    });\n  });\n\n\n  // '/v1/notes/add' - POST - add a note\n  api.post('/add', (req, res) => {\n    console.log(req.body.data);\n    let newNote = new Note();\n    newNote.name = req.body.name;\n    newNote.content = req.body.content;\n    newNote.cntxId = req.body.cntxId;\n    newNote.ts = req.body.ts;\n\n    newNote.save(function(err) {\n      if (err) {\n        res.send(err);\n      }else{\n        res.json({ message: 'Note saved successfully' });\n      }\n    });\n  });\n\n  // '/v1/notes/:id' - DELETE - remove a note\n  api.delete('/:id', (req, res) => {\n    Note.remove({\n      _id: req.params.id\n    }, (err, note) => {\n      if (err) {\n        res.send(err);\n      }\n        res.json({message: \"Note Successfully Removed\"});\n      });\n  });\n\n  // '/v1/notes/:id' - PUT - update an existing note\n  api.put('/:id', (req, res) => {\n    Note.findById(req.params.id, (err, note) => {\n      if (err) {\n        res.send(err);\n      }\n      note.name = req.body.name;\n      note.content = req.body.content;\n      note.isSecret = req.body.isSecret;\n      note.ts = req.body.ts;\n      note.save(function(err) {\n        if (err) {\n          res.send(err);\n        }\n        res.json({ message: 'Note info updated' });\n      });\n    });\n  });\n\n  return api;\n}\n"]}